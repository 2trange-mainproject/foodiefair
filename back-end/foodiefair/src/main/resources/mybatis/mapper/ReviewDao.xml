<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multicampus.foodiefair.dao.IReviewDAO">
    <insert id="insertDao">
        INSERT INTO Review (userId, productId, goodReviews, badReviews, receiptImg
        <if test="reviewImg != null">, reviewImg</if>)
        VALUES (#{userId}, #{productId}, #{goodReviews}, #{badReviews}, #{receiptImg}
        <if test="reviewImg != null">, #{reviewImg}</if>)
    </insert>

    <update id="updatePlusReviewNum">
        update Product set productReviews = productReviews + 1 where productId = #{productId}
    </update>

    <update id="updateMinusReviewNum">
        update Product set productReviews = productReviews - 1
        where productId = (
            SELECT productId FROM Review WHERE reviewId = #{reviewId}
        )
    </update>

    <select id="reviewCount" resultType="int">
        select productReviews from Product where productId = #{productId}
    </select>

    <select id="reviewDownCount" resultType="int">
        select productReviews from Product where productId = (
            SELECT productId FROM Review WHERE reviewId = #{reviewId}
        )
    </select>

    <update id="updatePositiveDao">
        INSERT INTO Keyword (productId, positiveKeyword)
        VALUES ('${productId}', JSON_OBJECT('${positiveKeyword}', 1))
            ON DUPLICATE KEY UPDATE positiveKeyword = JSON_SET(
                COALESCE(positiveKeyword, '{}'), '$."${positiveKeyword}"',
                IF(JSON_EXTRACT(positiveKeyword, '$."${positiveKeyword}"') IS NULL, 1, CAST(JSON_EXTRACT(positiveKeyword, '$."${positiveKeyword}"') + 1 AS UNSIGNED)))
    </update>

    <update id="updateNegativeDao">
        INSERT INTO Keyword (productId, negativeKeyword)
        VALUES ('${productId}', JSON_OBJECT('${negativeKeyword}', 1))
            ON DUPLICATE KEY UPDATE negativeKeyword = JSON_SET(
                COALESCE(negativeKeyword, '{}'), '$."${negativeKeyword}"',
                IF(JSON_EXTRACT(negativeKeyword, '$."${negativeKeyword}"') IS NULL, 1, CAST(JSON_EXTRACT(negativeKeyword, '$."${negativeKeyword}"') + 1 AS UNSIGNED)))
    </update>

    <select id="listDao" resultType="com.multicampus.foodiefair.dto.ReviewDTO">
        SELECT * FROM Keyword WHERE productId = #{productId}
    </select>

    <select id="getSmallCategory" resultType="String">
        SELECT JSON_UNQUOTE(JSON_EXTRACT(fixedTag, '$.smallCategory')) FROM Product WHERE productId = #{productId}
    </select>

    <update id="updateUserBadge">
        UPDATE ReviewNum
        SET reviewNum = JSON_SET(
                COALESCE(reviewNum, JSON_OBJECT()),
                '$."${smallCategory}"',
                COALESCE(JSON_EXTRACT(reviewNum, '$.#{smallCategory}'), 0) + 1
            ),
            userBadge = JSON_SET(
                    COALESCE(userBadge, JSON_OBJECT()),
                    '$."${smallCategory}"',
                    CASE
                        WHEN JSON_EXTRACT(reviewNum, '$."${smallCategory}"') + 1 >= 100 THEN '다이아몬드'
                        WHEN JSON_EXTRACT(reviewNum, '$."${smallCategory}"') + 1 >= 50 THEN '플래티넘'
                        WHEN JSON_EXTRACT(reviewNum, '$."${smallCategory}"') + 1 >= 30 THEN '골드'
                        WHEN JSON_EXTRACT(reviewNum, '$."${smallCategory}"') + 1 >= 20 THEN '실버'
                        WHEN JSON_EXTRACT(reviewNum, '$."${smallCategory}"') + 1 >= 10 THEN '브론즈'
                        ELSE JSON_EXTRACT(userBadge, '$."${smallCategory}"')
                        END
                )
        WHERE userId = #{userId}
    </update>
</mapper>
