<?xml version="1.0" encoding="UTF-8"?><!-- UserMapper.xml. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multicampus.foodiefair.dao.IUserDAO">
    <!-- User 테이블 가져오기 -->
    <select id="getUserList" resultType="com.multicampus.foodiefair.dto.UserDTO">
        SELECT * FROM User
    </select>

    <!-- 회원가입 -->
    <insert id="insertUser">
        INSERT INTO User
            (userName, userPwd, userEmail, userIntro, userTag, userImg)
        VALUES
            (#{userName},#{userPwd},#{userEmail},#{userIntro},#{userTag},#{userImg})
    </insert>


    <!-- 회원 정보 가져오기 --> <!--로그인 전용 -->
    <select id="getUserByEmail" resultType="com.multicampus.foodiefair.dto.UserDTO">
        SELECT *
        FROM User
        WHERE userEmail = #{userEmail}
    </select>

    <select id="getUserById" resultType="com.multicampus.foodiefair.dto.UserDTO">
        SELECT *
        FROM User
        WHERE userId = #{userId}
    </select>

    <!-- 회원정보 수정 -->
    <update id="updateUser">
        UPDATE User
        SET
        <if test="userImg != null and userImg != ''">
            userImg = #{userImg},
        </if>
        <if test="userName != null">
            userName = #{userName},
        </if>
        <if test="userTags != null">
            userTag = #{userTags},
        </if>
        <if test="userIntro != null">
            userIntro = #{userIntro}
        </if>
        WHERE userId = #{userId}
    </update>

    <!-- 탈퇴 -->
    <delete id="deleteUser" parameterType="int">
        DELETE
        FROM User
        WHERE userId = #{userId}
    </delete>

    <!-- 회원 비밀번호 수정 -->
    <update id="updateUserPassword">
        UPDATE User
        SET userPwd = #{userPwd}
        WHERE userEmail = #{userEmail}
    </update>

    <update id="deleteDao">
        update USER
        SET locked=1
        WHERE userEmail = #{userEmail}
    </update>

    <update id="updateDao">
        update User set userReport = #{userReport}, locked = #{locked}
        where userId = #{selectedId}
    </update>

    <select id="readDao" resultType="com.multicampus.foodiefair.dto.UserDTO">
        select * from User where userId = #{selectedId}
    </select>

    <select id="readBadge" resultType="com.multicampus.foodiefair.dto.ReviewNumDTO">
        select * from ReviewNum where userId = #{selectedId}
    </select>

    <update id="updateBadge">
        update ReviewNum set selectedBadge = #{selectedBadge}
        where userId = #{selectedId}
    </update>
</mapper>