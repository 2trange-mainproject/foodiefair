<mapper namespace="com.multicampus.foodiefair.dao.IReviewDAO">
    <select id="findReviewId" resultType="int">
        SELECT reviewId FROM Review WHERE productId=#{productId} AND userId=#{userId};
    </select>

    <delete id="reviewDelete">
        DELETE FROM Review WHERE reviewId=#{reviewId};
    </delete>

    <resultMap id="reviewReader" type="java.util.Map">
        <result column="userId" property="userId"/>
        <result column="reviewId" property="reviewId"/>
        <result column="commentNum" property="commentNum"/>
        <result column="userName" property="userName"/>
        <result column="userImg" property="userImg"/>
        <result column="reviewDate" property="reviewDate"/>
        <result column="goodReviews" property="goodReviews"/>
        <result column="badReviews" property="badReviews"/>
        <result column="reviewImg" property="reviewImg"/>
        <result column="reviewLikes" property="reviewLikes"/>
    </resultMap>
    <select id="dateReviewRead" resultType="com.multicampus.foodiefair.dto.ReviewDTO">
        SELECT User.userId, Review.reviewId, IFNULL(comment.commentNum, 0) AS commentNum, User.userName, User.userImg, Review.reviewDate, review.goodReviews, review.badReviews, review.reviewImg, review.reviewLikes
        FROM User INNER JOIN (SELECT * FROM Review WHERE productId=#{productId}) Review ON User.userId = Review.userId
        LEFT JOIN (SELECT COUNT(userId) commentNum, reviewId FROM comment GROUP BY reviewId) comment ON comment.reviewId = Review.reviewId
        WHERE Review.receiptImg = #{receiptImg} ORDER BY Review.reviewId DESC LIMIT 3 OFFSET #{offset};
    </select>
    <select id="likeReviewRead" resultType="com.multicampus.foodiefair.dto.ReviewDTO">
        SELECT User.userId, Review.reviewId, IFNULL(comment.commentNum, 0) AS commentNum, User.userName, User.userImg, Review.reviewDate, review.goodReviews, review.badReviews, review.reviewImg, review.reviewLikes
        FROM User INNER JOIN (SELECT * FROM Review WHERE productId=#{productId}) Review ON User.userId = Review.userId
        LEFT JOIN (SELECT COUNT(userId) commentNum, reviewId FROM comment GROUP BY reviewId) comment ON comment.reviewId = Review.reviewId
        WHERE Review.receiptImg = #{receiptImg} ORDER BY Review.reviewLikes DESC LIMIT 3 OFFSET #{offset};
    </select>

    <delete id="commentDelete">
        DELETE FROM comment WHERE reviewId=#{reviewId};
    </delete>

    <select id="reviewReadOne" resultType="java.util.Map">
        SELECT goodReviews, badReviews FROM Review WHERE reviewId=#{reviewId};
    </select>

    <update id="reviewModify">
        UPDATE Review SET goodReviews=#{goodReviews}, badReviews=#{badReviews}
        <if test="reviewImg != null">, reviewImg=#{reviewImg}</if>
        WHERE reviewId=#{reviewId};
    </update>

    <!-- 준우 부분 -->
    <select id="mypageDateReviewRead" resultType="com.multicampus.foodiefair.dto.ReviewDTO">
        SELECT User.userId, Review.reviewId, IFNULL(comment.commentNum, 0)
        AS commentNum, User.userName, User.userImg, Review.reviewDate, Review.goodReviews, Review.badReviews, Review.reviewImg, Review.reviewLikes
        FROM User INNER JOIN (SELECT * FROM Review WHERE userId=#{userId}) Review ON User.userId = Review.userId
        LEFT JOIN (SELECT COUNT(userId) commentNum, reviewId FROM comment GROUP BY reviewId) comment ON comment.reviewId = Review.reviewId
        WHERE Review.receiptImg = #{receiptImg} ORDER BY Review.reviewId DESC LIMIT 3 OFFSET #{offset};
    </select>
    <select id="mypageLikeReviewRead" resultType="com.multicampus.foodiefair.dto.ReviewDTO">
        SELECT User.userId, Review.reviewId, IFNULL(comment.commentNum, 0) AS commentNum, User.userName, User.userImg, Review.reviewDate, Review.goodReviews, Review.badReviews, Review.reviewImg, Review.reviewLikes
        FROM User INNER JOIN (SELECT * FROM Review WHERE userId=#{userId}) Review ON User.userId = Review.userId
        LEFT JOIN (SELECT COUNT(userId) commentNum, reviewId FROM comment GROUP BY reviewId) comment ON comment.reviewId = Review.reviewId
        WHERE Review.receiptImg = #{receiptImg} ORDER BY Review.reviewLikes DESC LIMIT 3 OFFSET #{offset};
    </select>
</mapper>
